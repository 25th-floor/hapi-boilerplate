{
  "swagger": "2.0",
  "info": {
    "description": "This is the ttrack API",
    "version": "0.3.2",
    "title": "ttrack API",
    "contact": {
      "email": "ts@25th-floor.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "tags": [
    {
      "name": "public",
      "description": "Public user calls"
    }
  ],
  "paths": {
    "/period-types": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "fetches list of period types",
        "operationId": "getPeriodTypes",
        "description": "Fetches a list of all period types that are currently available\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "list of period types",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PeriodType"
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "fetches list of users",
        "operationId": "getUsers",
        "description": "Fetches a list of all users that are currently available\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "list of users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "bad request"
          }
        }
      }
    },
    "/users/{user}": {
      "get": {
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "type": "string",
            "description": "id of user that needs to be fetched",
            "required": true
          }
        ],
        "summary": "Find a user by id",
        "operationId": "getUserById",
        "description": "Returns a user with the given id\n",
        "tags": [
          "public"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The user with the corresponding id",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "If the user cannot be found"
          }
        }
      }
    },
    "/users/{user}/timesheet/{from}/{to}": {
      "get": {
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "type": "string",
            "description": "id of user that needs to be fetched",
            "required": true
          },
          {
            "name": "from",
            "in": "path",
            "type": "string",
            "description": "startpoint of the timesheet (f.e. 2017-05-01)",
            "required": true
          },
          {
            "name": "to",
            "in": "path",
            "type": "string",
            "description": "endpoint of the timesheet (f.e. 2017-06-04)",
            "required": true
          }
        ],
        "summary": "Fetches the Timesheet",
        "operationId": "getTimesheetForUserInRange",
        "description": "Fetches all days with periods between the given date range\n",
        "tags": [
          "public"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The timesheet for a user in a given date range",
            "schema": {
              "$ref": "#/definitions/Timesheet"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/{user}/periods": {
      "post": {
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "type": "string",
            "description": "id of user",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "description": "Period object that needs to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostPeriod"
            }
          }
        ],
        "summary": "Create a Period",
        "operationId": "createPeriod",
        "description": "Creates a Period\n",
        "tags": [
          "public"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Period has been created",
            "schema": {
              "$ref": "#/definitions/Period"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/{user}/periods/{id}": {
      "put": {
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "type": "string",
            "description": "id of user",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "id of the period",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "description": "Period object that needs to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Period"
            }
          }
        ],
        "summary": "Update a Period",
        "operationId": "updatePeriod",
        "description": "Updates a Period\n",
        "tags": [
          "public"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Period has been updated",
            "schema": {
              "$ref": "#/definitions/Period"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "type": "string",
            "description": "id of user",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "id of the period",
            "required": true
          }
        ],
        "summary": "Delete a Period",
        "operationId": "deletePeriod",
        "description": "Deletes a Period\n",
        "tags": [
          "public"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "The Period has been deleted"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": [
        "id",
        "firstname",
        "lastname",
        "email",
        "employmentStart",
        "employmentEnd"
      ],
      "properties": {
        "id": {
          "type": "number",
          "example": 42
        },
        "firstname": {
          "type": "string",
          "example": "Jack"
        },
        "lastname": {
          "type": "string",
          "example": "Bauer"
        },
        "email": {
          "type": "string",
          "format": "email",
          "example": "jack.bauer@organization.com"
        },
        "employmentStart": {
          "type": "string",
          "format": "int32",
          "example": "2016-08-29T09:12:33.001Z"
        },
        "employmentEnd": {
          "type": "string",
          "format": "int32",
          "example": "2016-08-29T09:12:33.001Z"
        }
      }
    },
    "PeriodType": {
      "type": "object",
      "required": [
        "id",
        "name",
        "config"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "Work"
        },
        "name": {
          "type": "string",
          "example": "Arbeitszeit"
        },
        "config": {
          "$ref": "#/definitions/PeriodTypeConfig"
        }
      }
    },
    "PeriodTypeConfig": {
      "type": "object",
      "description": "JSON Configuration for client code",
      "required": [
        "icon",
        "bgcolor",
        "color",
        "nobadge",
        "types"
      ],
      "properties": {
        "icon": {
          "type": "string",
          "example": "fa-comment",
          "description": "font awesome icon name"
        },
        "bgcolor": {
          "type": "string",
          "example": "#656D78",
          "description": "css background color"
        },
        "color": {
          "type": "string",
          "example": "white",
          "description": "css color"
        },
        "nobadge": {
          "type": "boolean",
          "example": true,
          "description": "hide badge"
        },
        "types": {
          "$ref": "#/definitions/PeriodInputTypes"
        }
      }
    },
    "PeriodInputTypes": {
      "type": "object",
      "description": "Configuration JSON of which input types are allowed",
      "required": [
        "period",
        "fullday",
        "halfday",
        "duration"
      ],
      "properties": {
        "period": {
          "type": "boolean",
          "example": true,
          "description": "period type input is allowed"
        },
        "fullday": {
          "type": "boolean",
          "example": true,
          "description": "full day input type is allowed"
        },
        "halfday": {
          "type": "boolean",
          "example": true,
          "description": "half day input type is allowed"
        },
        "duration": {
          "type": "boolean",
          "example": true,
          "description": "duration input type is allowed"
        }
      }
    },
    "Timesheet": {
      "type": "object",
      "description": "Timesheet object",
      "required": [
        "carryFrom",
        "carryTime",
        "carryTo",
        "days"
      ],
      "properties": {
        "carryFrom": {
          "type": "string",
          "format": "int32",
          "example": "2016-08-29T09:12:33.001Z",
          "description": "Date from which point in time the carry data has been calculated from"
        },
        "carryTo": {
          "type": "string",
          "format": "int32",
          "example": "2016-08-29T09:12:33.001Z",
          "description": "Date to which point in time the carry data has been calculated to"
        },
        "carryTime": {
          "$ref": "#/definitions/DateTime"
        },
        "days": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Day"
          }
        }
      }
    },
    "DateTime": {
      "type": "object",
      "description": "Carry DateTime Object {hours and minutes}",
      "required": [
        "hours",
        "minutes"
      ],
      "properties": {
        "hours": {
          "type": "number",
          "example": 36
        },
        "minutes": {
          "type": "number",
          "example": 33
        }
      }
    },
    "Day": {
      "type": "object",
      "description": "Day Object with periods and meta information",
      "required": [
        "day_id",
        "day_date",
        "day_usr_id",
        "day_target_time",
        "periods",
        "remaining"
      ],
      "properties": {
        "day_id": {
          "type": "number",
          "example": 16706
        },
        "day_date": {
          "type": "string",
          "format": "int32",
          "example": "2016-08-29T00:00:00.000Z"
        },
        "day_usr_id": {
          "type": "number",
          "example": 42,
          "description": "id of the user"
        },
        "day_target_time": {
          "$ref": "#/definitions/DateTime"
        },
        "periods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Period"
          }
        },
        "remaining": {
          "$ref": "#/definitions/DateTime"
        }
      }
    },
    "Period": {
      "type": "object",
      "description": "Period of a day",
      "required": [
        "per_id",
        "per_break",
        "per_comment",
        "per_day_id",
        "per_duration",
        "per_pty_id",
        "per_start",
        "per_stop",
        "pty_name"
      ],
      "properties": {
        "per_id": {
          "type": "number",
          "example": 16708
        },
        "per_break": {
          "$ref": "#/definitions/DateTime"
        },
        "per_comment": {
          "type": "string",
          "example": "My awesome comment for the day",
          "description": "a comment field for the user to add comments to a period"
        },
        "per_day_id": {
          "type": "number",
          "example": 16706
        },
        "per_duration": {
          "$ref": "#/definitions/DateTime"
        },
        "per_pty_id": {
          "type": "string",
          "description": "PeriodType Id"
        },
        "per_start": {
          "$ref": "#/definitions/DateTime"
        },
        "per_stop": {
          "$ref": "#/definitions/DateTime"
        },
        "pty_name": {
          "type": "string",
          "example": "Feiertag",
          "description": "The name of the PeriodType"
        }
      }
    },
    "PostPeriod": {
      "type": "object",
      "description": "Period object for the create request",
      "required": [
        "date",
        "duration",
        "per_comment",
        "per_duration",
        "per_pty_id",
        "per_start",
        "per_stop",
        "per_break",
        "type",
        "userId"
      ],
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "example": "2017-05-30"
        },
        "duration": {
          "type": "string",
          "example": "period"
        },
        "per_comment": {
          "type": "string",
          "example": "My awesome comment for the day",
          "description": "a comment field for the user to add comments to a period"
        },
        "per_duration": {
          "$ref": "#/definitions/DateTime"
        },
        "per_pty_id": {
          "type": "string",
          "description": "PeriodType Id",
          "example": "Work"
        },
        "per_break": {
          "$ref": "#/definitions/DateTime"
        },
        "per_start": {
          "$ref": "#/definitions/DateTime"
        },
        "per_stop": {
          "$ref": "#/definitions/DateTime"
        },
        "type": {
          "$ref": "#/definitions/PeriodType"
        },
        "userId": {
          "type": "number",
          "example": 42,
          "description": "id of the user"
        }
      }
    }
  },
  "schemes": [
    "https"
  ]
}